// This command can be used to return the system state
{
    "command":"return_state"
}

// This command can be used to modify any of the 4 system sources
// Along with the command one or more of the parameters can be passed
// The system state struct will be returned if the command was successfully processed, error response otherwise
{
    "command":"set_source",
    "id":0 | 1 | 2 | 3,
    "name":"new name", // sets the friendly name for the source, ie "cd player" or "stream 1"
    "digital": false | true // sets the connection for the source, either analog (RCA) or digital (sharpoint)
}

// This command can be used to modify any zone
// Along with the command one or more of the parameters can be passed
// The number of the zones depends on how many boxes are chained together, check system state for # of zones
// The system state struct will be returned if the command was successfully processed, error response otherwise
{
    "command":"set_zone",
    "id": "any valid zone",
    "name":"new name", // sets the friendly name for the zone, ie "bathroom" or "kitchen 1"
    "source_id": 0 | 1 | 2 | 3,
    "mute": false | true, // this mutes the zone regardless of set volume
    "stby": false | true, // this sets the zone to standby, very low power consumption
    "vol": 0 to -79, // this sets the zone attenuation, 0 is max volume, -79 is min volume
    "disabled": false | true // set this to true if the zone is not connected to any speakers and not in use
}

// This command can be used to set any EXISTING group
// Along with the command one or more of the parameters can be passed
// check the system state for a list of existing group
// The system state struct will be returned if the command was successfully processed, error response otherwise
{
    "command":"set_group",
    "id": "any vaild group",
    "name":"new name", // sets the friendly name for the group, ie "upstairs" or "back yard"
    "source_id": 0 | 1 | 2 | 3, // change all zones in group to different source
    "zones": [0,1,2...], // specify new array of zones that make up the group
    "mute": false | true, // mutes all zones in group
    "stby": false | true, // sets all zone in group to standby
    "vol_delta": 0 to 79 // CHANGES the volume of each zone in the group by this much. For each zone, will saturate if out of range
}

// This command can be used to create a NEW group
// Along with the command ALL parameters must also be passed
// The system state struct will be returned if the command was successfully processed, error response otherwise
// Refer to the returned system state to obtain the id for the newly created group
{
    "command":"create_group",
    "name":"new group name",
    "zones": [0,1,2...] // specify new array of zones that make up the group
}

// This command can be used to delete an EXISTING group
// Along with the command ALL parameters must also be passed
// The system state struct will be returned if the command was successfully processed, error response otherwise
{
    "command":"delete_group",
    "id":"new group name"
}

// This is the system state response that will come back from the ethaudio box
{
    "sources": [ // this is an array of source objects, each has an id, name, and bool specifying wheater source comes from RCA or digital input
	{ "id":0, "name":"Source 1", "digital":false },
	{ "id":1, "name":"Source 2", "digital":false },
	{ "id":2, "name":"Source 3", "digital":false },
	{ "id":3, "name":"Source 4", "digital":false }
    ],
    "zones": [ // this is an array of zones, array length depends on # of boxes connected
	{ "id":0, "name":"Zone 1", "source_id":0, "mute":false, "stby":false, "disabled":false, "vol":0 },
	{ "id":1, "name":"Zone 2", "source_id":0, "mute":false, "stby":false, "disabled":false, "vol":0 },
	{ "id":2, "name":"Zone 3", "source_id":0, "mute":false, "stby":false, "disabled":false, "vol":0 },
	{ "id":3, "name":"Zone 4", "source_id":0, "mute":false, "stby":false, "disabled":false, "vol":0 },
	{ "id":4, "name":"Zone 5", "source_id":0, "mute":false, "stby":false, "disabled":false, "vol":0 },
	{ "id":5, "name":"Zone 6", "source_id":0, "mute":false, "stby":false, "disabled":false, "vol":0 }
    ],
    "groups": [ // this is an array of groups that have been created , each group has a friendly name and an array of member zones
	{ "id":0, "name":"Group 1", "zones": [0,1,2] },
	{ "id":1, "name":"Group 2", "zones": [2,3,4] },
	{ "id":2, "name":"Group 3", "zones": [5] }
    ]
}
